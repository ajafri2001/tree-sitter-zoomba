y = yaml(_/"../sample.yaml", true )
assert( 3484312313131321131 === y.invoice   , 'Yaml loading failed!' )
assert( y.bv isa 'bool' , 'Boolean parsing in Yaml Failed!')
assert( y.int_as_str isa 'str' , 'Forcing int as str did not work!' )
assert( y.double_as_str isa 'str', 'Forcing double as str did not work!' )
assert( y.invoice isa 'int', 'Natural widening into long failed!' )

// using xpath ?
d = { 'a' : { 'b' : 10 , 'c' : 20 } , 'c' : 30 }
assert( xpath(d,'/a/b') == 10, 'jxPath did not work!' )
assert( size(xpath(d,'//c', true ) ) == 2, 'jxPath multiple select did not work!' )
assert( xelem(d,'/a/b').value == 10, 'jxElem did not work!' )
assert( size(xelem(d,'//c', true ) ) == 2, 'jxElem multiple select did not work!' )

// convert to yaml string
syd = ystr(d)
assert( syd isa 'str' , 'Did not convert to string' )
d2 = yaml(syd) // convert back to dict
assert( d == d2 , 'Dictionary equal did not produce right result!' )

// xml to json and so on and so forth : location, isLocation? , encoding, validationAgainstDTD?
x = xml( _/'../books.xml', true , 'UTF-8', false )
panic(  empty( jstr(x) ) , "json string conversion failed!" )
jx = json(x)
assert( "catalog" @ jx , "json string conversion failed" )
assert( size( jx.catalog.book ) == 12  , "json object conversion failed" )
assert( "catalog" @ ystr(x) , "yaml string conversion failed" )
